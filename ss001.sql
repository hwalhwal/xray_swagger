-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.aerich
(
    id integer NOT NULL DEFAULT nextval('aerich_id_seq'::regclass),
    version character varying(255) COLLATE pg_catalog."default" NOT NULL,
    app character varying(100) COLLATE pg_catalog."default" NOT NULL,
    content jsonb NOT NULL,
    CONSTRAINT aerich_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.contaminant
(
    id integer NOT NULL DEFAULT nextval('contaminant_id_seq'::regclass),
    category smallint NOT NULL,
    shape smallint NOT NULL,
    coordinates jsonb NOT NULL,
    product_inspection_session_id integer NOT NULL,
    CONSTRAINT contaminant_pkey PRIMARY KEY (id)
);

COMMENT ON COLUMN public.contaminant.category
    IS '이물의 카테고리를 지정한다';

COMMENT ON COLUMN public.contaminant.shape
    IS '이물 표시 영역의 모양';

CREATE TABLE IF NOT EXISTS public.conveyor
(
    id integer NOT NULL DEFAULT nextval('conveyor_id_seq'::regclass),
    serial_number character varying(255) COLLATE pg_catalog."default" NOT NULL,
    settings jsonb NOT NULL,
    device_info_id integer NOT NULL,
    product_id integer,
    CONSTRAINT conveyor_pkey PRIMARY KEY (id),
    CONSTRAINT conveyor_serial_number_key UNIQUE (serial_number)
);

CREATE TABLE IF NOT EXISTS public.device_info
(
    id integer NOT NULL DEFAULT nextval('device_info_id_seq'::regclass),
    product_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    product_code character varying(255) COLLATE pg_catalog."default" NOT NULL,
    model_series character varying(255) COLLATE pg_catalog."default" NOT NULL,
    manufacturer character varying(255) COLLATE pg_catalog."default" NOT NULL,
    specifications jsonb NOT NULL,
    CONSTRAINT device_info_pkey PRIMARY KEY (id)
);

COMMENT ON TABLE public.device_info
    IS 'Device Information.';

CREATE TABLE IF NOT EXISTS public.dummymodel
(
    id integer NOT NULL DEFAULT nextval('dummymodel_id_seq'::regclass),
    name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT dummymodel_pkey PRIMARY KEY (id)
);

COMMENT ON TABLE public.dummymodel
    IS 'Model for demo purpose.';

CREATE TABLE IF NOT EXISTS public.inspection_algorithm
(
    id integer NOT NULL DEFAULT nextval('inspection_algorithm_id_seq'::regclass),
    name character varying(7) COLLATE pg_catalog."default" NOT NULL,
    schema jsonb NOT NULL,
    CONSTRAINT inspection_algorithm_pkey PRIMARY KEY (id)
);

COMMENT ON COLUMN public.inspection_algorithm.name
    IS E'ALAT_HP: AlatHP\\nAL_003E: Al003e\\nAL_DONG1: Aldong1\\nAL_007P2: Al007p2\\nAL_009: Al009';

CREATE TABLE IF NOT EXISTS public.inspection_algorithm_instance
(
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    modified_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    id integer NOT NULL DEFAULT nextval('inspection_algorithm_instance_id_seq'::regclass),
    parameters jsonb NOT NULL,
    algorithm_id integer NOT NULL,
    CONSTRAINT inspection_algorithm_instance_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.inspection_algorithm_rule_set
(
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    modified_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    id integer NOT NULL DEFAULT nextval('inspection_algorithm_rule_set_id_seq'::regclass),
    name character varying(255) COLLATE pg_catalog."default",
    product_id integer NOT NULL,
    CONSTRAINT inspection_algorithm_rule_set_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.inspection_settings
(
    id integer NOT NULL DEFAULT nextval('inspection_settings_id_seq'::regclass),
    mode character varying(255) COLLATE pg_catalog."default" NOT NULL,
    ng_behavior character varying(255) COLLATE pg_catalog."default" NOT NULL,
    ng_image_store_policy character varying(255) COLLATE pg_catalog."default" NOT NULL,
    image_trim character varying(255) COLLATE pg_catalog."default",
    product_id integer NOT NULL,
    CONSTRAINT inspection_settings_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.metal_detector
(
    id integer NOT NULL DEFAULT nextval('metal_detector_id_seq'::regclass),
    serial_number character varying(255) COLLATE pg_catalog."default" NOT NULL,
    settings jsonb NOT NULL,
    device_info_id integer NOT NULL,
    product_id integer,
    CONSTRAINT metal_detector_pkey PRIMARY KEY (id),
    CONSTRAINT metal_detector_serial_number_key UNIQUE (serial_number)
);

CREATE TABLE IF NOT EXISTS public.mmap_session
(
    id integer NOT NULL DEFAULT nextval('mmap_session_id_seq'::regclass),
    s3_key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    session_started_at timestamp with time zone NOT NULL,
    session_ended_at timestamp with time zone NOT NULL,
    preservation boolean NOT NULL,
    CONSTRAINT mmap_session_pkey PRIMARY KEY (id),
    CONSTRAINT mmap_session_s3_key_key UNIQUE (s3_key)
);

CREATE TABLE IF NOT EXISTS public.product
(
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    modified_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    id integer NOT NULL DEFAULT nextval('product_id_seq'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT product_pkey PRIMARY KEY (id),
    CONSTRAINT product_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.product_inspection_session
(
    id integer NOT NULL DEFAULT nextval('product_inspection_session_id_seq'::regclass),
    image_s3_key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    session_started_at timestamp with time zone NOT NULL,
    session_ended_at timestamp with time zone NOT NULL,
    start_mmap_session_ptr integer NOT NULL,
    end_mmap_session_ptr integer NOT NULL,
    system_error text COLLATE pg_catalog."default",
    end_mmap_session_id integer NOT NULL,
    product_id integer NOT NULL,
    start_mmap_session_id integer NOT NULL,
    CONSTRAINT product_inspection_session_pkey PRIMARY KEY (id),
    CONSTRAINT product_inspection_session_image_s3_key_key UNIQUE (image_s3_key)
);

CREATE TABLE IF NOT EXISTS public.rejector
(
    id integer NOT NULL DEFAULT nextval('rejector_id_seq'::regclass),
    serial_number character varying(255) COLLATE pg_catalog."default" NOT NULL,
    settings jsonb NOT NULL,
    device_info_id integer NOT NULL,
    product_id integer,
    CONSTRAINT rejector_pkey PRIMARY KEY (id),
    CONSTRAINT rejector_serial_number_key UNIQUE (serial_number)
);

CREATE TABLE IF NOT EXISTS public.rule_set_usage
(
    id integer NOT NULL DEFAULT nextval('rule_set_usage_id_seq'::regclass),
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    modified_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    "order" smallint NOT NULL,
    inspection_algorithm_instance_id integer NOT NULL,
    inspection_algorithm_ruleset_id integer NOT NULL,
    CONSTRAINT rule_set_usage_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."user"
(
    id integer NOT NULL DEFAULT nextval('user_id_seq'::regclass),
    username character varying(200) COLLATE pg_catalog."default" NOT NULL,
    firstname character varying(128) COLLATE pg_catalog."default" NOT NULL,
    lastname character varying(128) COLLATE pg_catalog."default" NOT NULL,
    password character varying(128) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(128) COLLATE pg_catalog."default" NOT NULL,
    job_title character varying(128) COLLATE pg_catalog."default" NOT NULL,
    date_joined timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    last_signin timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone NOT NULL,
    is_staff boolean NOT NULL DEFAULT false,
    is_superuser boolean NOT NULL DEFAULT false,
    CONSTRAINT user_pkey PRIMARY KEY (id),
    CONSTRAINT user_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.xray_detector
(
    id integer NOT NULL DEFAULT nextval('xray_detector_id_seq'::regclass),
    serial_number character varying(255) COLLATE pg_catalog."default" NOT NULL,
    settings jsonb NOT NULL,
    device_info_id integer NOT NULL,
    product_id integer,
    CONSTRAINT xray_detector_pkey PRIMARY KEY (id),
    CONSTRAINT xray_detector_serial_number_key UNIQUE (serial_number)
);

CREATE TABLE IF NOT EXISTS public.xray_emitter
(
    id integer NOT NULL DEFAULT nextval('xray_emitter_id_seq'::regclass),
    serial_number character varying(255) COLLATE pg_catalog."default" NOT NULL,
    settings jsonb NOT NULL,
    max_scan_range integer NOT NULL,
    max_scan_velocity integer NOT NULL,
    max_voltage numeric(10, 4) NOT NULL,
    max_current numeric(10, 4) NOT NULL,
    device_info_id integer NOT NULL,
    product_id integer,
    CONSTRAINT xray_emitter_pkey PRIMARY KEY (id),
    CONSTRAINT xray_emitter_serial_number_key UNIQUE (serial_number)
);

COMMENT ON TABLE public.xray_emitter
    IS 'Hello';

COMMENT ON COLUMN public.xray_emitter.max_scan_range
    IS 'in mm';

COMMENT ON COLUMN public.xray_emitter.max_scan_velocity
    IS 'in cm/min';

COMMENT ON COLUMN public.xray_emitter.max_voltage
    IS 'in kV';

COMMENT ON COLUMN public.xray_emitter.max_current
    IS 'in mA';

ALTER TABLE IF EXISTS public.contaminant
    ADD CONSTRAINT contaminant_product_inspection_session_id_fkey FOREIGN KEY (product_inspection_session_id)
    REFERENCES public.product_inspection_session (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.conveyor
    ADD CONSTRAINT conveyor_device_info_id_fkey FOREIGN KEY (device_info_id)
    REFERENCES public.device_info (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.conveyor
    ADD CONSTRAINT conveyor_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.inspection_algorithm_instance
    ADD CONSTRAINT inspection_algorithm_instance_algorithm_id_fkey FOREIGN KEY (algorithm_id)
    REFERENCES public.inspection_algorithm (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.inspection_algorithm_rule_set
    ADD CONSTRAINT inspection_algorithm_rule_set_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.inspection_settings
    ADD CONSTRAINT inspection_settings_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.metal_detector
    ADD CONSTRAINT metal_detector_device_info_id_fkey FOREIGN KEY (device_info_id)
    REFERENCES public.device_info (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.metal_detector
    ADD CONSTRAINT metal_detector_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.product_inspection_session
    ADD CONSTRAINT product_inspection_session_end_mmap_session_id_fkey FOREIGN KEY (end_mmap_session_id)
    REFERENCES public.mmap_session (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.product_inspection_session
    ADD CONSTRAINT product_inspection_session_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.product_inspection_session
    ADD CONSTRAINT product_inspection_session_start_mmap_session_id_fkey FOREIGN KEY (start_mmap_session_id)
    REFERENCES public.mmap_session (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.rejector
    ADD CONSTRAINT rejector_device_info_id_fkey FOREIGN KEY (device_info_id)
    REFERENCES public.device_info (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.rejector
    ADD CONSTRAINT rejector_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.rule_set_usage
    ADD CONSTRAINT rule_set_usage_inspection_algorithm_instance_id_fkey FOREIGN KEY (inspection_algorithm_instance_id)
    REFERENCES public.inspection_algorithm_instance (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.rule_set_usage
    ADD CONSTRAINT rule_set_usage_inspection_algorithm_ruleset_id_fkey FOREIGN KEY (inspection_algorithm_ruleset_id)
    REFERENCES public.inspection_algorithm_rule_set (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.xray_detector
    ADD CONSTRAINT xray_detector_device_info_id_fkey FOREIGN KEY (device_info_id)
    REFERENCES public.device_info (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.xray_detector
    ADD CONSTRAINT xray_detector_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.xray_emitter
    ADD CONSTRAINT xray_emitter_device_info_id_fkey FOREIGN KEY (device_info_id)
    REFERENCES public.device_info (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.xray_emitter
    ADD CONSTRAINT xray_emitter_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;
