"""Converted models

Revision ID: db1cc602b44d
Revises: 2b7380507a71
Create Date: 2023-07-24 12:58:24.668504

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "db1cc602b44d"
down_revision = "2b7380507a71"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "device_info",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("product_name", sa.String(length=255), nullable=False),
        sa.Column("product_code", sa.String(length=255), nullable=False),
        sa.Column("model_series", sa.String(length=255), nullable=False),
        sa.Column("manufacturer", sa.String(length=255), nullable=False),
        sa.Column("specifications", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_device_info_id"), "device_info", ["id"], unique=False)
    op.create_table(
        "inspection_algorithm",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "name",
            sa.Enum(
                "ALAT_HP",
                "AL_003E",
                "AL_DONG1",
                "AL_007P2",
                "AL_009",
                name="algorithm_name",
            ),
            nullable=False,
        ),
        sa.Column(
            "schema",
            sa.JSON(),
            nullable=True,
            comment="JSON Schema로 파라미터별 이름, 설명, constraint 정의",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_inspection_algorithm_id"),
        "inspection_algorithm",
        ["id"],
        unique=False,
    )
    op.create_table(
        "mmap_session",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("s3_key", sa.String(length=512), nullable=False),
        sa.Column("session_started_at", sa.DateTime(), nullable=False),
        sa.Column("session_ended_at", sa.DateTime(), nullable=False),
        sa.Column("preservation", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("s3_key"),
    )
    op.create_table(
        "product",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_product_id"), "product", ["id"], unique=False)
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("firstname", sa.String(length=128), nullable=False),
        sa.Column("lastname", sa.String(length=128), nullable=False),
        sa.Column("password", sa.String(length=128), nullable=False),
        sa.Column("phone_number", sa.String(length=128), nullable=False),
        sa.Column("job_title", sa.String(length=128), nullable=False),
        sa.Column("date_joined", sa.DateTime(), nullable=True),
        sa.Column("last_signin", sa.DateTime(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("is_staff", sa.Boolean(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_table(
        "inspection_algorithm_instance",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("algorithm_id", sa.Integer(), nullable=True),
        sa.Column("parameters", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["algorithm_id"],
            ["inspection_algorithm.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_inspection_algorithm_instance_id"),
        "inspection_algorithm_instance",
        ["id"],
        unique=False,
    )
    op.create_table(
        "inspection_algorithm_rule_set",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("product_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_inspection_algorithm_rule_set_id"),
        "inspection_algorithm_rule_set",
        ["id"],
        unique=False,
    )
    op.create_table(
        "inspection_setting",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("mode", sa.String(length=255), nullable=True),
        sa.Column("ng_behavior", sa.String(length=255), nullable=True),
        sa.Column("ng_image_store_policy", sa.String(length=255), nullable=True),
        sa.Column("image_trim", sa.String(length=255), nullable=True),
        sa.Column("product_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_inspection_setting_id"),
        "inspection_setting",
        ["id"],
        unique=False,
    )
    op.create_table(
        "peripheraldevicebasemodel",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("serial_number", sa.String(length=255), nullable=False),
        sa.Column("device_info_id", sa.Integer(), nullable=True),
        sa.Column("settings", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["device_info_id"],
            ["device_info.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("serial_number"),
    )
    op.create_index(
        op.f("ix_peripheraldevicebasemodel_id"),
        "peripheraldevicebasemodel",
        ["id"],
        unique=False,
    )
    op.create_table(
        "product_inspection_session",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("image_s3_key", sa.String(length=255), nullable=False),
        sa.Column("session_started_at", sa.DateTime(), nullable=False),
        sa.Column("session_ended_at", sa.DateTime(), nullable=False),
        sa.Column("start_mmap_session_ptr", sa.Integer(), nullable=False),
        sa.Column("end_mmap_session_ptr", sa.Integer(), nullable=False),
        sa.Column("system_error", sa.String(length=1024), nullable=True),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("image_s3_key"),
    )
    op.create_index(
        op.f("ix_product_inspection_session_id"),
        "product_inspection_session",
        ["id"],
        unique=False,
    )
    op.create_table(
        "contaminant",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "category",
            sa.Enum(
                "METAL",
                "NON_FERROUS_METAL",
                "GLASS",
                "BONE",
                "PVC",
                "TFE",
                "CERAMIC_CONCRETE",
                "MISSING_PRODUCT",
                name="contaminant_category",
            ),
            nullable=True,
            comment="이물의 카테고리를 지정한다",
        ),
        sa.Column(
            "shape",
            sa.Enum("CIRCLE", "ELLIPSE", "OVAL", "RECTANGLE", "POLYGON", name="shape"),
            nullable=True,
            comment="이물 표시 영역의 모양",
        ),
        sa.Column("coordinates", sa.JSON(), nullable=True),
        sa.Column("product_inspection_session_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_inspection_session_id"],
            ["product_inspection_session.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_contaminant_id"), "contaminant", ["id"], unique=False)
    op.create_table(
        "rule_set_usage",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("inspection_algorithm_ruleset_id", sa.Integer(), nullable=True),
        sa.Column("inspection_algorithm_instance_id", sa.Integer(), nullable=True),
        sa.Column("order", sa.SmallInteger(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["inspection_algorithm_instance_id"],
            ["inspection_algorithm_instance.id"],
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["inspection_algorithm_ruleset_id"],
            ["inspection_algorithm_rule_set.id"],
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_rule_set_usage_id"),
        "rule_set_usage",
        ["id"],
        unique=False,
    )
    op.drop_table("migratehistory")
    op.alter_column(
        "dummy_model",
        "name",
        existing_type=sa.VARCHAR(length=200),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "dummy_model",
        "name",
        existing_type=sa.VARCHAR(length=200),
        nullable=True,
    )
    op.create_table(
        "migratehistory",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "migrated_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="migratehistory_pkey"),
    )
    op.drop_index(op.f("ix_rule_set_usage_id"), table_name="rule_set_usage")
    op.drop_table("rule_set_usage")
    op.drop_index(op.f("ix_contaminant_id"), table_name="contaminant")
    op.drop_table("contaminant")
    op.drop_index(
        op.f("ix_product_inspection_session_id"),
        table_name="product_inspection_session",
    )
    op.drop_table("product_inspection_session")
    op.drop_index(
        op.f("ix_peripheraldevicebasemodel_id"),
        table_name="peripheraldevicebasemodel",
    )
    op.drop_table("peripheraldevicebasemodel")
    op.drop_index(op.f("ix_inspection_setting_id"), table_name="inspection_setting")
    op.drop_table("inspection_setting")
    op.drop_index(
        op.f("ix_inspection_algorithm_rule_set_id"),
        table_name="inspection_algorithm_rule_set",
    )
    op.drop_table("inspection_algorithm_rule_set")
    op.drop_index(
        op.f("ix_inspection_algorithm_instance_id"),
        table_name="inspection_algorithm_instance",
    )
    op.drop_table("inspection_algorithm_instance")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_product_id"), table_name="product")
    op.drop_table("product")
    op.drop_table("mmap_session")
    op.drop_index(op.f("ix_inspection_algorithm_id"), table_name="inspection_algorithm")
    op.drop_table("inspection_algorithm")
    op.drop_index(op.f("ix_device_info_id"), table_name="device_info")
    op.drop_table("device_info")
    # ### end Alembic commands ###
